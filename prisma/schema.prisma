// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?         @unique
  hashedPassword String?
  emailVerified  DateTime?
  image          String?
  role           UserRole?
  // Optional for WebAuthn support
  users       UserTrack[]  @relation("userTracks")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Mix {
  id        String        @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  tracks    MixTrack[]    @relation("MixTracks")
}

model Tracks {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  artist      String?
 
 
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  user       UserTrack[]   @relation("userTracks")
  mixes       MixTrack[]    @relation("TrackMixes")
 
}

model UserTrack {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  userId   String   @db.ObjectId
  trackId  String   @db.ObjectId

  isExport   Boolean?
  status      String?
  position    Int?
 
  user     User     @relation("userTracks",fields: [userId], references: [id], onDelete: Cascade)
  track    Tracks    @relation("userTracks",fields: [trackId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MixTrack {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  mixId     String   @db.ObjectId
  trackId   String   @db.ObjectId

  mix       Mix      @relation("MixTracks", fields: [mixId], references: [id], onDelete: Cascade)
  track     Tracks    @relation("TrackMixes", fields: [trackId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([mixId, trackId])
}
